name: CI

on:
  schedule:
    - cron: '30 7 1 * *'
  push:
  pull_request:

jobs:
  test:
    name: ${{ matrix.compiler }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ] # don't bother with macos-latest
        compiler:
          - dmd-latest
          - ldc-latest
          - dmd-2.094.2
          - dmd-2.093.1
          - dmd-2.092.1
          - dmd-2.091.1
          - dmd-2.090.1
          - dmd-2.089.1
          - dmd-2.088.1
          - dmd-2.087.1
          - dmd-2.086.1
          - dmd-2.085.1
          - dmd-2.084.1
          - dmd-2.083.1
          - dmd-2.082.1
          - ldc-1.24.0 # eq to dmd v2.094.1
          - ldc-1.23.0 # eq to dmd v2.093.1
          - ldc-1.22.0 # eq to dmd v2.092.1
          - ldc-1.21.0 # eq to dmd v2.091.1
          - ldc-1.20.1 # eq to dmd v2.090.1
          - ldc-1.19.0 # eq to dmd v2.089.1
          - ldc-1.18.0 # eq to dmd v2.088.1
          - ldc-1.17.0 # eq to dmd v2.087
          - ldc-1.16.0 # eq to dmd v2.086.1
          - ldc-1.15.0 # eq to dmd v2.085.1
          - ldc-1.14.0 # eq to dmd v2.084.1
          - ldc-1.13.0 # eq to dmd v2.083.1
          - ldc-1.12.0 # eq to dmd v2.082.1
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install D ${{ matrix.compiler }}
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.compiler }}

      - name: Install dependencies on Ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get update && sudo apt-get install libev-dev libpq-dev libevent-dev libsqlite3-dev -y

      # - name: Install dependencies on Mac OSX
      #   if: startsWith(matrix.os, 'mac')
      #   run: brew bundle

      - name: Upgrade dub dependencies
        uses: WebFreak001/dub-upgrade@v0.1

      - name: dub test with SQLite config
        run: dub test --config=SQLite
        
      - name: dub run with test config
        run: dub run --config=test
        
      - name: run the ddbctest project
        working-directory: example
        run: dub build --config=SQLite && ./ddbctest --connection=sqlite:ddbc-test.sqlite

      - uses: WebFreak001/dub-upgrade@v0.1 # cache
        with: { store: true }

  test-windows:
    name: ${{ matrix.compiler }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ] # don't bother with macos-latest
        compiler:
          - dmd-latest
          - ldc-latest
          - dmd-2.094.2
          - ldc-1.24.0 # eq to dmd v2.094.1
          - ldc-1.23.0 # eq to dmd v2.093.1
          - ldc-1.22.0 # eq to dmd v2.092.1
          - ldc-1.21.0 # eq to dmd v2.091.1
          - ldc-1.20.1 # eq to dmd v2.090.1
          - ldc-1.19.0 # eq to dmd v2.089.1
          - ldc-1.18.0 # eq to dmd v2.088.1
          - ldc-1.17.0 # eq to dmd v2.087
          - ldc-1.16.0 # eq to dmd v2.086.1
          - ldc-1.15.0 # eq to dmd v2.085.1
          - ldc-1.14.0 # eq to dmd v2.084.1
          - ldc-1.13.0 # eq to dmd v2.083.1
          - ldc-1.12.0 # eq to dmd v2.082.1
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install D ${{ matrix.compiler }}
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.compiler }}

      - name: Upgrade dub dependencies
        uses: WebFreak001/dub-upgrade@v0.1

      # x86
      - name: dub test with SQLite config on x86
        run: dub test --config=SQLite --arch=x86

      - name: dub run with test config on x86
        if: ${{ !startsWith(matrix.compiler, 'ldc') || matrix.arch != 'x86_mscoff' }}
        run: dub run --config=test --arch=x86

      - name: run the ddbctest project on x86
        working-directory: example
        run: dub build --config=SQLite --arch=x86 && ./ddbctest --connection=sqlite:ddbc-test.sqlite

      # x86_mscoff
      - name: dub test with SQLite config on x86_mscoff
        if: startsWith(matrix.compiler, 'dmd')
        run: dub test --config=SQLite --arch=x86_mscoff

      - name: dub run with test config on x86_mscoff
        if: startsWith(matrix.compiler, 'dmd')
        run: dub run --config=test --arch=x86_mscoff

      - name: run the ddbctest project on x86_mscoff
        if: startsWith(matrix.compiler, 'dmd')
        working-directory: example
        run: dub build --config=SQLite --arch=x86_mscoff && ./ddbctest --connection=sqlite:ddbc-test.sqlite

      # x86_64
      - name: dub test with SQLite config on x86_64
        run: dub test --config=SQLite --arch=x86_64

      - name: dub run with test config on x86_64
        run: dub run --config=test --arch=x86_64

      - name: run the ddbctest project on x86_64
        working-directory: example
        run: dub build --config=SQLite --arch=x86_64 && ./ddbctest --connection=sqlite:ddbc-test.sqlite

      - uses: WebFreak001/dub-upgrade@v0.1 # cache
        with: { store: true }

  # before dub 1.23.0(x86_omf unsupported)
  test-win32-older:
    name: ${{ matrix.compiler }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ] # don't bother with macos-latest
        compiler:
          - dmd-2.093.1
          - dmd-2.092.1
          - dmd-2.091.1
          - dmd-2.090.1
          - dmd-2.089.1
          - dmd-2.088.1
          - dmd-2.087.1
          - dmd-2.086.1
          - dmd-2.085.1
          - dmd-2.084.1
          - dmd-2.083.1
          - dmd-2.082.1
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install D ${{ matrix.compiler }}
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.compiler }}

      - name: Upgrade dub dependencies
        uses: WebFreak001/dub-upgrade@v0.1

      # x86
      - name: dub test with SQLite config on x86
        run: dub test --config=SQLite-omf --arch=x86

      - name: dub run with test config on x86
        run: dub run --config=test-omf --arch=x86

      - name: run the ddbctest project on x86
        working-directory: example
        run: dub build --config=SQLite-omf --arch=x86 && ./ddbctest --connection=sqlite:ddbc-test.sqlite

      # x86_mscoff
      - name: dub test with SQLite config on x86_mscoff
        run: dub test --config=SQLite --arch=x86_mscoff

      - name: dub run with test config on x86_mscoff
        run: dub run --config=test --arch=x86_mscoff

      - name: run the ddbctest project on x86_mscoff
        working-directory: example
        run: dub build --config=SQLite --arch=x86_mscoff && ./ddbctest --connection=sqlite:ddbc-test.sqlite

      # x86_64
      - name: dub test with SQLite config on x86_64
        run: dub test --config=SQLite --arch=x86_64

      - name: dub run with test config on x86_64
        run: dub run --config=test --arch=x86_64

      - name: run the ddbctest project on x86_64
        working-directory: example
        run: dub build --config=SQLite --arch=x86_64 && ./ddbctest --connection=sqlite:ddbc-test.sqlite

      - uses: WebFreak001/dub-upgrade@v0.1 # cache
        with: { store: true }
